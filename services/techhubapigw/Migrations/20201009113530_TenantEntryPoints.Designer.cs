// This code is property of the GGAO // 


// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using techhubapigw.Database;

namespace techhubapigw.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201009113530_TenantEntryPoints")]
    partial class TenantEntryPoints
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("techhubapigw.Database.DTOs.ApiKeyDTO", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Department")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReportId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Roles")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TenantId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Key");

                    b.HasIndex("Department");

                    b.HasIndex("ReportId");

                    b.HasIndex("TenantId");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("techhubapigw.Database.DTOs.Metric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApiKeyId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<string>("Resource")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApiKeyId");

                    b.HasIndex("Timestamp");

                    b.ToTable("Metrics");
                });

            modelBuilder.Entity("techhubapigw.Database.DTOs.Tenant", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("EntryPoints")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("TenantId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("techhubapigw.Database.DTOs.UsageLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApiKeyId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Current")
                        .HasColumnType("int");

                    b.Property<int>("Limit")
                        .HasColumnType("int");

                    b.Property<string>("Resource")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ApiKeyId");

                    b.ToTable("Limits");
                });

            modelBuilder.Entity("techhubapigw.Database.DTOs.ApiKeyDTO", b =>
                {
                    b.HasOne("techhubapigw.Database.DTOs.Tenant", "Tenant")
                        .WithMany("ApiKeys")
                        .HasForeignKey("TenantId");
                });

            modelBuilder.Entity("techhubapigw.Database.DTOs.Metric", b =>
                {
                    b.HasOne("techhubapigw.Database.DTOs.ApiKeyDTO", "Apikey")
                        .WithMany("Metrics")
                        .HasForeignKey("ApiKeyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("techhubapigw.Database.DTOs.UsageLimit", b =>
                {
                    b.HasOne("techhubapigw.Database.DTOs.ApiKeyDTO", "ApiKey")
                        .WithMany("Limits")
                        .HasForeignKey("ApiKeyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
