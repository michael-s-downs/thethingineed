### This code is property of the GGAO ###


trigger:
  batch: true
  branches:
    include:
    - develop
    - release/v*
    - main/*
  paths:
    include:
    - 'services/techhubintegrationreceiver/*'
    - 'helm/'

variables:
- group: Variables para CI
- group: Images base params
- group: RegistryVariables

- name: serviceName
  value: 'techhubintegrationreceiver'
- name:  projectName
  value: 'TechHubGlobalToolkit'
- name:  vmImageName
  value: 'ubuntu-20.04'
- name:  pythonVersion
  value: '3.8'
- name:  baseImage
  value: '$(integration_base)'
- name:  registryServerName
  value: '$(registryName).azurecr.io'
- name: acrRegistryLogin
  value: '$(registryLogin)'
- name: acrRegistryPassword
  value: '$(registryPassword)'
- name: templateType
  value: 'microservicesgenai'
- name: helmRepoLocation
  value: '$(Agent.BuildDirectory)/s/helm'
- name: helmVersion
  value: '$(helmVer)'
- name: projectLocation
  value: '$(Agent.BuildDirectory)/s/services'
- name: description
  value: 'Microservice to integration async. Receive request of client and convert request in queue message to be processed by integration-sender'
- name: feedGenai
  value: '$(feed_genai)'

stages:
- stage: Building
  displayName: Build image
  jobs:
  - job:
    pool:
      vmImage: $(vmImageName)
    steps:
    - template: ../ap-template.yml
      parameters:
        serviceName: '$(serviceName)'
        registryServerName: '$(registryServerName)'
        acrRegistryLogin:  '$(acrRegistryLogin)'
        acrRegistryPassword:  '$(acrRegistryPassword)'
        defaultWorkingDirectory: '$(system.defaultWorkingDirectory)'
        sourcesDirectory: '$(projectLocation)/$(serviceName)'
        tag: '$(Build.BuildNumber)'
        pythonVersion: '$(pythonVersion)'
        baseImage: '$(baseImage)'
        projectLocation: '$(projectLocation)'
        helmRepoLocation: '$(helmRepoLocation)'
        helmVersion: '$(helmVersion)'
        templateType: '$(templateType)'
        description: '$(description)'
        libraryFeed: '$(feedGenai)'