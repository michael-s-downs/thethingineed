# Chart
chart:
  name:
  version:
  apiversion:
  description:
# Control
isService:
# Configmap
common:
  debug_tenants:
  log_level:
  provider:
  tenant:
  storage_data:
  storage_backend:
  queue_delete_on_read:
  queue_mode:
  storage_queue:
ocr:
  bytes_mode:
integration:
  storage_config_folder:
  sotrage_persist_folder:
  integration_queue_url:
  vector_storage:
  integration_name:
  local_common_path:
sender:
  storage_persist_request:
  storage_delete_request:
  api_queue_process_url:
  api_queue_delete_url:
  request_flow_timeout:
  request_internal_timeout:
  api_sync_infodelete_url:
compose:
  url_llm:
  url_retrieve:
  redis_session_expiration_time:
  cron_time:
  uri_prefix_knowler:
  url_allowed_documents_knowler:
indexing:
  aws_region_name:
  vector_storage:
checktimeout:
  cron_time:
retrieve:
  vector_storage:
apigw:
  sqldb:
  Namespace:
  PrefixNamespace:
# Deployment
loadSecrets: {}
replicaCount:
requests:
  cpu:
  memory:
limits:
  cpu:
  memory:
redis:
  status:
  timeout:
  session:
queues: {}
image:
  name:
  useImagePullSecrets:
  pullPolicy: Always
  tag:
  repository:
  username:
  password:
  nameImagePullSecret:
provider:
namespace:
nodePool:
ports:
  type: http
  port: 8888
  protocol: TCP
# Service
service:
  internalPort: http
  externalPort: 80
  type:
# Secrets
azure-value:
azure-ocr-value:
aws-value:
redis-value:
models-value:
vector-storage-value:
# Langfuse
add_langfuse: false
langfuse:
  langfuse:
  langfuse_host:
  langfuse_public_key:
  langfuse_secret_key:
# Ingress
ingress:
  enabled: false
  basedomain:
  port: 80
keda:
  enabled: false
  keda_auth_name:
  keda_key:
  keda_creds_name:
  keda_azure_param:
  msg_count:
  queue_name:
  keda_type:
  min_replicas:
  max_replicas: