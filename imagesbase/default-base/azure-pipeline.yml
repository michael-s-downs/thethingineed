### This code is property of the GGAO ###


trigger:
  batch: true
  branches:
    include: 
    - develop
    - master
  paths:
    include:
    - default-base

variables:
- group: Params Python
- group: Variables para CI
- group: RegistryVariables
- group: Sonarqube Params

- name: imageName
  value: '$(default_base)'
- name: vmImageName
  value: '$(vmImageName)'
- name: pythonVersion
  value: '$(python_version)'
- name: feedGenai
  value: '$(feed_genai)'
- name: libraryVersion
  value: '$(library)'
- name:  registryServerName
  value: '$(registryName).azurecr.io'
- name: acrRegistryLogin
  value: '$(registryLogin)'
- name: acrRegistryPassword
  value: '$(registryPassword)'

stages:
- stage: SonarAnalysis
  displayName: Sonar analysis and test coverage
  jobs:
  - job:
    continueOnError: false
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(pythonVersion)'
          addToPath: true
          architecture: 'x64'
        displayName: Set Python version

      - script: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > $(System.DefaultWorkingDirectory)/$(imageName)/coverage.xml
          echo '<coverage branch-rate="1.0" line-rate="1.0" version="1.0">' >> $(System.DefaultWorkingDirectory)/$(imageName)/coverage.xml
          echo '    <packages/>' >> $(System.DefaultWorkingDirectory)/$(imageName)/coverage.xml
          echo '</coverage>' >> $(System.DefaultWorkingDirectory)/$(imageName)/coverage.xml
        displayName: Coverage report
      
      - task: SonarQubePrepare@7
        inputs:
          SonarQube: $(sonarqube_service_connection)
          scannerMode: 'cli'
          configMode: 'manual'
          cliProjectKey: $(System.DefinitionName)
          cliSources: '$(System.DefaultWorkingDirectory)/$(imageName)/'
          extraProperties: |
              sonar.projectVersion=1.0
              sonar.sources=$(System.DefaultWorkingDirectory)/$(imageName)/
              sonar.python.coverage.reportPaths=$(System.DefaultWorkingDirectory)/$(imageName)/coverage.xml
              sonar.exclusions=**/test/**
        displayName: Sonar Preprare

      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.branch.name":"[\w\.,/,-]*"\,?'
                Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"   
        displayName: Remove parameter

      - task: SonarQubeAnalyze@7
        inputs:
          jdkversion: 'JAVA_HOME_17_X64'
        displayName: Sonar Analyze

      - task: SonarQubePublish@7
        inputs:
          pollingTimeoutSec: '300'
        displayName: Sonar Publish
        
- stage: Building
  displayName: Build image Docker and Trivy scan
  jobs:
  - job:
    pool:
      vmImage: $(vmImageName)
    steps:
    - template: ../ap-template.yml
      parameters:
        imageName: '$(imageName)'
        defaultWorkingDirectory: '$(system.defaultWorkingDirectory)/$(imageName)'
        sourcesDirectory: '$(Build.SourcesDirectory)/$(imageName)'
        tag: '$(Build.BuildNumber)'
        pythonVersion: '$(pythonVersion)'
        libraryFeed: '$(feedGenai)'
        registryServerName: '$(registryServerName)'
        acrRegistryLogin: '$(acrRegistryLogin)'
        acrRegistryPassword: '$(acrRegistryPassword)'
        libraryVersion: '$(libraryVersion)'