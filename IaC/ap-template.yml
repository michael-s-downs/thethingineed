trigger:
  batch: true
  branches:
    include:
    - develop
    - release/v*
    - master
  paths:
    include:
    - 'IaC/*'

variables:
- group: Variables para CI
- group: TerraformBackend
- name: 'projectlocation'
  value: '$(Agent.BuildDirectory)/s'

pool:
  vmImage: '$(vmImageName)'

stages:
  - stage: TerraformValidate
    jobs:
      - job: Validate
        continueOnError: false
        steps:
        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
          displayName: TFInstall
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV3@3
          displayName: TFInit
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: '$(TF_VAR_CONN_STR)'
            backendAzureRmResourceGroupName: '$(TF_VAR_STATUS_RG)'
            backendAzureRmStorageAccountName: '$(TF_VAR_STATUS_CONTAINER_SA)'
            backendAzureRmContainerName: '$(TF_VAR_STATUS_STORAGE)'
            backendAzureRmKey: '$(TF_VAR_STATUS_KEY_SA)'
        - task: TerraformTaskV3@3
          displayName: TFValidate
          inputs:
            provider: 'azurerm'
            command: 'validate'
  - stage: TerraformArtifact
    condition: succeeded('TerraformValidate')
    dependsOn: TerraformValidate
    jobs:
      - job: CopyFilesIaCAndPublishAzure
        steps:
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)/IaC/Terraform/Azure'
            Contents: '**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)/IaC/Terraform/Azure'
            CleanTargetFolder: true
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/IaC/Terraform/Azure'
            ArtifactName: 'Terraform-Azure'
            publishLocation: 'Container'
      - job: CopyFilesIaCAndPublishAWS
        steps:
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)/IaC/Terraform/AWS'
            Contents: '**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)/IaC/Terraform/AWS'
            CleanTargetFolder: true
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/IaC/Terraform/AWS'
            ArtifactName: 'Terraform-AWS'
            publishLocation: 'Container'
  - stage: ScriptsArtifact
    condition: succeeded('TerraformArtifact')
    dependsOn: 
      - TerraformArtifact
    jobs:
    - job: CopyFilesScriptsAndPublishAzure
      steps:
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/IaC/Scripts/Azure'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/IaC/Scripts/Azure'
          CleanTargetFolder: true
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/IaC/Scripts/Azure'
          ArtifactName: 'Scripts-Azure'
          publishLocation: 'Container'
    - job: CopyFilesScriptsAndPublishAWS
      steps:
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/IaC/Scripts/AWS'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/IaC/Scripts/AWS'
          CleanTargetFolder: true
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/IaC/Scripts/AWS'
          ArtifactName: 'Scripts-AWS'
          publishLocation: 'Container'